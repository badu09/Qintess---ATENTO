global without sharing class CtrlProcessoPedido {

	public CtrlProcessoPedido(ApexPages.StandardController controller){

	}

	@RemoteAction
	global static RetornoModel implantar(Id idProcessoImplantacao, Id idOportunidade) {
		System.debug('idProcessoImplantacao: ' + idProcessoImplantacao);
		System.debug('idOportunidade: ' + idOportunidade);
		RetornoModel model = new RetornoModel();
		Profile perfil = DAOProfile.getProfileById(UserInfo.getProfileId());

		model.idOportunidade = idOportunidade;

		try {
			if(!perfil.Name.equalsIgnoreCase('Administrador do sistema')) {
				Order pedido = DAOOrder.getOrderById(idProcessoImplantacao);
				Opportunity oportunidadePrincipal = DAOOpportunity.getOpportunityById(idOportunidade);
				RecordType tipoRegistro = DAORecordType.obterPorId(pedido.RecordTypeId, 'Order');

				if (tipoRegistro.DeveloperName.equalsIgnoreCase('Vendas')) {
					oportunidadePrincipal.Processo_Implantacao__c = pedido.Id;

					if (pedido.OwnerId != UserInfo.getUserId()) {
						pedido.OwnerId = UserInfo.getUserId();
					}

					if (oportunidadePrincipal != null ) {
						system.debug('oportunidadePrincipal: ' + json.serialize(oportunidadePrincipal));
						update oportunidadePrincipal;
					}

					if (pedido != null) {
						system.debug('pedido: ' + json.serialize(pedido));
						update pedido;
					}

					model.sucesso = true;
				}
				else {

					if (oportunidadePrincipal.Implantador_Atribuido__c != null &&
									oportunidadePrincipal.Implantador_Atribuido__c != Userinfo.getUserId()) {

						String nomeImplantador = oportunidadePrincipal.Implantador_Atribuido__r.Name;

						model.sucesso = false;

						if (oportunidadePrincipal.Total_Fidelizado__c > 0) {
							model.mensagemErro =
									'Favor contatar o seu coordenador. Esta oportunidade está fidelizada ao implantador ' +
									nomeImplantador;
						} else {
							model.mensagemErro =
									'Favor contatar o seu coordenador. Esta oportunidade está em atentimento pelo implantador ' +
									nomeImplantador;
						}
					} else {

						Set<String> setFase = new Set<String>();

						setFase.add('Auditoria Finalizada/ Transf Implantação');
						setFase.add('Devolvido Para Implantar');
						setFase.add('Em Implantação');

						RecordType tipoRegistroImplantacao = DAORecordType.obterPorDeveloperName('Implatacao', 'Order');

						Map<Id,Opportunity> mapIdOpp = new Map<Id,Opportunity>();
						List<Order> lProcessoImplantacao = new List<Order>();

						for (Order item : DAOOrder.getOrderByAccountId(oportunidadePrincipal.Account.Id)) {
							if (setFase.contains(item.Opportunity.StageName)) {

								Opportunity oportunidade = new Opportunity();

								oportunidade.Id = item.Opportunity.Id;
								oportunidade.Implantador_Atribuido__c = Userinfo.getUserId();
								oportunidade.StageName = 'Em Implantação';
								oportunidade.Processo_Implantacao__c = item.Id;

								mapIdOpp.put(oportunidade.Id,oportunidade);

								Order processoImplantacao = new Order();

								processoImplantacao.Id = item.Id;

								if (item.OwnerId != UserInfo.getUserId()) {
									processoImplantacao.OwnerId = UserInfo.getUserId();
								}

								processoImplantacao.Status = 'Implantacao';
								processoImplantacao.RecordTypeId = tipoRegistroImplantacao.Id;

								lProcessoImplantacao.add(processoImplantacao);
							}
						}

						if (!mapIdOpp.keySet().isEmpty()) {
							system.debug('lOportunidade: ' + json.serialize(mapIdOpp.values()));
							update mapIdOpp.values();
						}

						if (!lProcessoImplantacao.isEmpty()) {
							system.debug('lProcessoImplantacao: ' + json.serialize(lProcessoImplantacao));
							update lProcessoImplantacao;
						}

						model.sucesso = true;
					}
				}
			}
		}
		catch(DmlException ex) {
			system.debug('DmlException: ' + ex.getLineNumber());
			system.debug('DmlException: ' + ex.getStackTraceString());
			system.debug('DmlException: ' + ex.getTypeName());
			system.debug('DmlException: ' + ex.getCause());
			system.debug('DmlException: ' + ex.getMessage());

			model.sucesso = false;
			model.mensagemErro = ex.getDmlMessage(0);
		}
		catch(Exception ex) {
			system.debug('Exception: ' + ex.getLineNumber());
			system.debug('Exception: ' + ex.getStackTraceString());
			system.debug('Exception: ' + ex.getTypeName());
			system.debug('Exception: ' + ex.getCause());
			system.debug('Exception: ' + ex.getMessage());

			model.sucesso = false;
			model.mensagemErro = ex.getMessage();
		}

		return model;
	}

	global class RetornoModel {
		global Id idOportunidade {get; set;}
		global Boolean sucesso {get; set;}
		global String mensagemErro {get; set;}

		global RetornoModel() {

		}
	}

	static public void testMaker(){
		String a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';

		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';

		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';

		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
		a = 'a';
	}
}